---
import type { MarkdownInstance } from "astro";
import dayjs from "dayjs";

import BaseLayout from "../../layouts/baseLayout.astro";
import type { PostFrontmatter } from "../../types/post.domain";

interface Props {
  currentPost: MarkdownInstance<PostFrontmatter>;
}

export async function getStaticPaths() {
  const allPosts = await Astro.glob<PostFrontmatter>(
    "../../content/posts/*.md",
  );

  return allPosts.map((post) => ({
    params: {
      post: post.frontmatter.slug,
    },
    props: {
      currentPost: allPosts.find(
        (p) => p.frontmatter.slug === post.frontmatter.slug,
      ),
    },
  }));
}

const { currentPost } = Astro.props;
const formatedDate = dayjs(currentPost.frontmatter.date).format(
  "MMMM DD, YYYY",
);

const Content = currentPost.Content;
---

<BaseLayout>
  <article
    class="prose prose-slate mt-32 max-w-none prose-a:text-light-blue-vivid-400 prose-a:no-underline hover:prose-a:underline dark:prose-invert lg:prose-xl"
  >
    <h1>{currentPost.frontmatter.title}</h1>
    <span>
      {
        `${formatedDate} • ${currentPost.frontmatter.tags.join(
          ", ",
        )} • ${"☕".repeat(
          currentPost.frontmatter.expectedReadTime,
        )} ${currentPost.frontmatter.expectedReadTime.toString()} min read`
      }
    </span>
    <img
      class="w-full object-cover shadow-lg"
      src={currentPost.frontmatter.image}
    />
    <Content />
  </article>
</BaseLayout>
