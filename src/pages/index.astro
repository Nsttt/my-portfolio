---
import { getCollection } from "astro:content";
import Card from "../components/card.astro";
import BaseLayout from "../layouts/baseLayout.astro";

const posts = await getCollection("posts");
const projects = await getCollection("projects");
const talks = await getCollection("talks");
---

<BaseLayout
  title="NÃ©stor's Blog"
  description="Writting about software development in Typescript and Rust."
>
  <section class="mt-20 flex">
    <div class="w-full text-xl">
      <h1 class="mb-10 text-3xl">Hi ðŸ‘‹, I'm NÃ©stor from Spain ðŸ‡ªðŸ‡¸</h1>
      <p class="my-3">
        I'm a software Architect with passion for functional programming and
        static typing, and systems design.
      </p>

      <p>
        I currently co-maintain <a
          class="text-light-blue-vivid-500 hover:underline"
          href="https://trpc.io/"
          target="_blank">tRPC</a
        > a next-gen framework for building typesafe APIs with TypeScript, and <a
          class="text-light-blue-vivid-500 hover:underline"
          href="https://create.t3.gg/"
          target="_blank">T3 Stack</a
        > a fullstack Next.JS template for building typesafe applications.
      </p>
      <p class="my-3">
        I also do <a
          class="text-light-blue-vivid-500 hover:underline"
          href="/talks">conference talks and workshops</a
        > about OSS tools, IoT and systems design.
      </p>
    </div>
  </section>
  <section>
    <div
      class="mb-10 mt-28 flex justify-between border-b-[1px] border-gray-500 pb-5"
    >
      <h2 class="self-baseline text-4xl">Latest posts</h2>
      <a
        href="/blog"
        class="self-baseline text-lg text-light-blue-vivid-500 hover:underline"
        >See all posts</a
      >
    </div>
    <ul class="flex flex-col gap-x-2 gap-y-8 sm:gap-x-4 xl:gap-x-6">
      {
        posts
          .filter((post) => !post.data.draft)
          .sort(
            (a, b) =>
              new Date(b.data.pubDate).valueOf() -
              new Date(a.data.pubDate).valueOf(),
          )
          .slice(0, 3)
          .map((post) => (
            <li>
              <Card
                href={`/blog/${post.slug}`}
                title={post.data.title}
                description={post.data.description}
                date={post.data.pubDate}
                expectedReadTime={post.data.expectedReadTime}
              />
            </li>
          ))
      }
    </ul>
  </section>
  <section>
    <div
      class="mb-10 mt-20 flex justify-between border-b-[1px] border-gray-500 pb-5"
    >
      <h2 class="self-baseline text-4xl">Talks and Workshops by me</h2>
      <a
        href="/talks"
        class="self-baseline text-lg text-light-blue-vivid-500 hover:underline"
        >See all content</a
      >
    </div>
    <ul class="flex flex-col gap-x-2 gap-y-8 sm:gap-x-4 xl:gap-x-6">
      {
        talks
          .sort(
            (a, b) =>
              new Date(b.data.pubDate).valueOf() -
              new Date(a.data.pubDate).valueOf(),
          )
          .slice(0, 3)
          .map((talk) => (
            <li>
              <Card
                href={`/talks/${talk.slug}`}
                title={talk.data.title}
                description={talk.data.description}
                date={talk.data.pubDate}
                expectedReadTime={0}
              />
            </li>
          ))
      }
    </ul>
  </section>
  <section>
    <div
      class="mb-10 mt-20 flex justify-between border-b-[1px] border-gray-500 pb-5"
    >
      <h2 class="self-baseline text-4xl">Things I've built</h2>
      <a
        href="/projects"
        class="self-baseline text-lg text-light-blue-vivid-500 hover:underline"
        >See all projects</a
      >
    </div>
    <ul class="flex flex-col gap-x-2 gap-y-8 sm:gap-x-4 xl:gap-x-6">
      {
        projects
          .sort(
            (a, b) =>
              new Date(b.data.pubDate).valueOf() -
              new Date(a.data.pubDate).valueOf(),
          )
          .slice(0, 3)
          .map((project) => (
            <li>
              <Card
                href={`/projects/${project.slug}`}
                title={project.data.title}
                description={project.data.description}
                date={project.data.pubDate}
                expectedReadTime={0}
              />
            </li>
          ))
      }
    </ul>
  </section>
</BaseLayout>
